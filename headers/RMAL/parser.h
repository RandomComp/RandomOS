#ifndef _RMAL_PARSER_H
#define _RMAL_PARSER_H

#include "../../headers/types.h"

#include "../../headers/RMAL/lexer.h"

// Parser of RMAL ( Random minimal assembly language )

typedef uint8 Opcode;

typedef int16 OpcodesLength;

enum RMALInstructionsBase {
	NOPBASE = 0x90,



	MOVRRBASEBYTE0 = 0x40,

	MOVRRBASEBYTE1 = 0x89,

	MOVRRBASEBYTE2 = 0xc0,


	MOVRADDRESSAZBASEBYTE0 = 0x8b,

	MOVRADDRESSAZBASEBYTE1 = 0x00,



	MOVRADDRESSBASEBYTE0 = 0x8b,

	MOVRADDRESSBASEBYTE1 = 0x40,

	MOVRADDRESSBASEBYTE2 = 0x00,


	MOVRNBASEBYTE0 = 0xb8,

	MOVRNBASEBYTE1 = 0x00,

	MOVRNBASEBYTE2 = 0x00,

	MOVRNBASEBYTE3 = 0x00,

	MOVRNBASEBYTE4 = 0x00,



	PUSHRBASE = 0x50,


	PUSHNLTOTSBASEBYTE0 = 0x6a,

	PUSHNLTOTSBASEBYTE1 = 0x00,


	PUSHNBTOTSBASEBYTE0 = 0x68,

	PUSHNBTOTSBASEBYTE1 = 0x00,

	PUSHNBTOTSBASEBYTE2 = 0x00,

	PUSHNBTOTSBASEBYTE3 = 0x00,

	PUSHNBTOTSBASEBYTE4 = 0x00,



	POPBASE = 0x58,



	ADDRRBASEBYTE0 = 0x01,

	ADDRRBASEBYTE1 = 0xc0,


	ADDRNNLTOTSBASEBYTE0 = 0x83,

	ADDRNNLTOTSBASEBYTE1 = 0xc0,

	ADDRNNLTOTSBASEBYTE2 = 0x00,


	ADDEAXNNBTOTSBASEBYTE0 = 0x05,

	ADDEAXNNBTOTSBASEBYTE1 = 0x00,

	ADDEAXNNBTOTSBASEBYTE2 = 0x00,

	ADDEAXNNBTOTSBASEBYTE3 = 0x00,

	ADDEAXNNBTOTSBASEBYTE4 = 0x00,


	ADDRNEAXNNBTOTSBASEBYTE0 = 0x81,

	ADDRNEAXNNBTOTSBASEBYTE1 = 0xc0,

	ADDRNEAXNNBTOTSBASEBYTE2 = 0x00,

	ADDRNEAXNNBTOTSBASEBYTE3 = 0x00,

	ADDRNEAXNNBTOTSBASEBYTE4 = 0x00,

	ADDRNEAXNNBTOTSBASEBYTE5 = 0x00,



	SUBRRBASEBYTE0 = 0x29,

	SUBRRBASEBYTE1 = 0xc0,


	SUBRNNLTOTSBASEBYTE0 = 0x83,

	SUBRNNLTOTSBASEBYTE1 = 0xe8,

	SUBRNNLTOTSBASEBYTE2 = 0x00,


	SUBEAXNNBTOTSBASEBYTE0 = 0x2d,

	SUBEAXNNBTOTSBASEBYTE1 = 0x00,

	SUBEAXNNBTOTSBASEBYTE2 = 0x00,

	SUBEAXNNBTOTSBASEBYTE3 = 0x00,

	SUBEAXNNBTOTSBASEBYTE4 = 0x00,


	SUBRNEAXNNBTOTSBASEBYTE0 = 0x81,

	SUBRNEAXNNBTOTSBASEBYTE1 = 0xe8,

	SUBRNEAXNNBTOTSBASEBYTE2 = 0x00,

	SUBRNEAXNNBTOTSBASEBYTE3 = 0x00,

	SUBRNEAXNNBTOTSBASEBYTE4 = 0x00,

	SUBRNEAXNNBTOTSBASEBYTE5 = 0x00,


	MULRBASEBYTE0 = 0xf7,

	MULRBASEBYTE1 = 0xe0,



	DIVRBASEBYTE0 = 0xf7,

	DIVRBASEBYTE1 = 0xf0,


	INCRBASEBYTE0 = 0xff,

	INCRBASEBYTE1 = 0xc0,



	DECRBASEBYTE0 = 0xff,

	DECRBASEBYTE1 = 0xc8,



	INX8BASEBYTE0 = 0xec,



	INX16BASEBYTE0 = 0x66,

	INX16BASEBYTE1 = 0xed,



	INX32BASEBYTE0 = 0xed,



	OUTX8BASEBYTE0 = 0xee,



	OUTX16BASEBYTE0 = 0x66,

	OUTX16BASEBYTE1 = 0xef,



	OUTX32BASEBYTE0 = 0xef,



	JMPRBASEBYTE0 = 0xff,


	JMPRBASEBYTE1 = 0xe0,


	JMPNLTTZBASEBYTE0 = 0xeb,

	JMPNLTTZBASEBYTE1 = 0x00,
	

	JMPNLTSFFTFBASEBYTE0 = 0xe9,

	JMPNLTSFFTFBASEBYTE1 = 0x7d,

	JMPNLTSFFTFBASEBYTE2 = 0x00,

	JMPNLTSFFTFBASEBYTE3 = 0x00,

	JMPNLTSFFTFBASEBYTE4 = 0x00,


	RETBASE = 0xc3
};

void RMALParse(void); // Parse

void RMALCompile(void); // Compile

#endif